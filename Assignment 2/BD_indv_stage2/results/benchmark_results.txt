# JMH version: 1.35
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-58
# VM invoker: C:\Program Files\Java\OpenJDK-21\bin\java.exe
# VM options: -javaagent:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\lib\idea_rt.jar=51623:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.matrix.benchmark.BenchmarkMatrix.testLoop
# Parameters: (size = 10)

# Run progress: 0.00% complete, ETA 00:05:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.003 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.003 ms/op
Iteration   1: 0.003 ms/op
                 ·stack: <delayed till summary>

Iteration   2: 0.003 ms/op
                 ·stack: <delayed till summary>

Iteration   3: 0.003 ms/op
                 ·stack: <delayed till summary>

Iteration   4: 0.003 ms/op
                 ·stack: <delayed till summary>

Iteration   5: 0.003 ms/op
                 ·stack: <delayed till summary>



Result "org.matrix.benchmark.BenchmarkMatrix.testLoop":
  0.003 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.003, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.002, 0.004] (assumes normal distribution)

Secondary result "org.matrix.benchmark.BenchmarkMatrix.testLoop:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
 75.0%         RUNNABLE
 25.0%         TIMED_WAITING

....[Thread state: RUNNABLE]........................................................................
 25.0%  33.3% <stack is empty, everything is filtered?>
 25.0%  33.3% sun.nio.ch.SocketDispatcher.read0
 24.8%  33.1% org.matrix.LoopUnrollingMatrixMultiplication.multiply
  0.2%   0.2% org.matrix.benchmark.jmh_generated.BenchmarkMatrix_testLoop_jmhTest.testLoop_avgt_jmhStub

....[Thread state: TIMED_WAITING]...................................................................
 25.0% 100.0% jdk.internal.misc.Unsafe.park



# JMH version: 1.35
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-58
# VM invoker: C:\Program Files\Java\OpenJDK-21\bin\java.exe
# VM options: -javaagent:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\lib\idea_rt.jar=51623:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.matrix.benchmark.BenchmarkMatrix.testNaive
# Parameters: (size = 10)

# Run progress: 33.33% complete, ETA 00:03:24
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.003 ms/op
Iteration   1: 0.003 ms/op
                 ·stack: <delayed till summary>

Iteration   2: 0.003 ms/op
                 ·stack: <delayed till summary>

Iteration   3: 0.003 ms/op
                 ·stack: <delayed till summary>

Iteration   4: 0.003 ms/op
                 ·stack: <delayed till summary>

Iteration   5: 0.003 ms/op
                 ·stack: <delayed till summary>



Result "org.matrix.benchmark.BenchmarkMatrix.testNaive":
  0.003 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.003, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.002, 0.004] (assumes normal distribution)

Secondary result "org.matrix.benchmark.BenchmarkMatrix.testNaive:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
 75.0%         RUNNABLE
 25.0%         TIMED_WAITING

....[Thread state: RUNNABLE]........................................................................
 25.0%  33.3% <stack is empty, everything is filtered?>
 25.0%  33.3% sun.nio.ch.SocketDispatcher.read0
 24.9%  33.2% org.matrix.NaiveMatrixMultiplication.multiply
  0.1%   0.2% org.matrix.benchmark.jmh_generated.BenchmarkMatrix_testNaive_jmhTest.testNaive_avgt_jmhStub

....[Thread state: TIMED_WAITING]...................................................................
 25.0% 100.0% jdk.internal.misc.Unsafe.park



# JMH version: 1.35
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-58
# VM invoker: C:\Program Files\Java\OpenJDK-21\bin\java.exe
# VM options: -javaagent:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\lib\idea_rt.jar=51623:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.matrix.benchmark.BenchmarkMatrix.testStrassen
# Parameters: (size = 10)

# Run progress: 66.67% complete, ETA 00:01:42
# Fork: 1 of 1
# Warmup Iteration   1: 0.200 ms/op
# Warmup Iteration   2: 0.198 ms/op
# Warmup Iteration   3: 0.209 ms/op
# Warmup Iteration   4: 0.228 ms/op
# Warmup Iteration   5: 0.221 ms/op
Iteration   1: 0.228 ms/op
                 ·stack: <delayed till summary>

Iteration   2: 0.237 ms/op
                 ·stack: <delayed till summary>

Iteration   3: 0.254 ms/op
                 ·stack: <delayed till summary>

Iteration   4: 0.222 ms/op
                 ·stack: <delayed till summary>

Iteration   5: 0.238 ms/op
                 ·stack: <delayed till summary>



Result "org.matrix.benchmark.BenchmarkMatrix.testStrassen":
  0.236 ±(99.9%) 0.047 ms/op [Average]
  (min, avg, max) = (0.222, 0.236, 0.254), stdev = 0.012
  CI (99.9%): [0.189, 0.283] (assumes normal distribution)

Secondary result "org.matrix.benchmark.BenchmarkMatrix.testStrassen:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
 75.0%         RUNNABLE
 25.0%         TIMED_WAITING

....[Thread state: RUNNABLE]........................................................................
 25.0%  33.3% <stack is empty, everything is filtered?>
 25.0%  33.3% sun.nio.ch.SocketDispatcher.read0
 10.8%  14.4% org.matrix.StrassenMatrixMultiplication.multiply
  7.9%  10.6% org.matrix.StrassenMatrixMultiplication.addMatrix
  5.0%   6.6% org.matrix.StrassenMatrixMultiplication.subtractMatrix
  0.9%   1.2% org.matrix.StrassenMatrixMultiplication.splitMatrix
  0.4%   0.6% org.matrix.StrassenMatrixMultiplication.mergeMatrix

....[Thread state: TIMED_WAITING]...................................................................
 25.0% 100.0% jdk.internal.misc.Unsafe.park



# Run complete. Total time: 00:05:06

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                            (size)  Mode  Cnt  Score   Error  Units
BenchmarkMatrix.testLoop                 10  avgt    5  0.003 ± 0.001  ms/op
BenchmarkMatrix.testLoop:·stack          10  avgt         NaN            ---
BenchmarkMatrix.testNaive                10  avgt    5  0.003 ± 0.001  ms/op
BenchmarkMatrix.testNaive:·stack         10  avgt         NaN            ---
BenchmarkMatrix.testStrassen             10  avgt    5  0.236 ± 0.047  ms/op
BenchmarkMatrix.testStrassen:·stack      10  avgt         NaN            ---
