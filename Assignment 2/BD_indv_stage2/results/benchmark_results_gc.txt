# JMH version: 1.35
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-58
# VM invoker: C:\Program Files\Java\OpenJDK-21\bin\java.exe
# VM options: -javaagent:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\lib\idea_rt.jar=51847:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.matrix.benchmark.BenchmarkMatrix.testLoop
# Parameters: (size = 10)

# Run progress: 0.00% complete, ETA 00:05:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.002 ms/op
# Warmup Iteration   5: 0.002 ms/op
Iteration   1: 0.002 ms/op
                 ·gc.alloc.rate:                   588.062 MB/sec
                 ·gc.alloc.rate.norm:              1016.082 B/op
                 ·gc.churn.G1_Eden_Space:          590.956 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1021.082 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.004 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         24.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 0.002 ms/op
                 ·gc.alloc.rate:                   589.808 MB/sec
                 ·gc.alloc.rate.norm:              1016.093 B/op
                 ·gc.churn.G1_Eden_Space:          590.750 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1017.715 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.004 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         22.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 0.002 ms/op
                 ·gc.alloc.rate:                   591.760 MB/sec
                 ·gc.alloc.rate.norm:              1016.079 B/op
                 ·gc.churn.G1_Eden_Space:          590.921 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1014.639 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.005 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         23.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 0.002 ms/op
                 ·gc.alloc.rate:                   591.084 MB/sec
                 ·gc.alloc.rate.norm:              1016.079 B/op
                 ·gc.churn.G1_Eden_Space:          591.703 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1017.143 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         22.000 ms
                 ·stack:                           <delayed till summary>

Iteration   5: 0.002 ms/op
                 ·gc.alloc.rate:                   543.245 MB/sec
                 ·gc.alloc.rate.norm:              1016.080 B/op
                 ·gc.churn.G1_Eden_Space:          562.553 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1052.193 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         17.000 ms
                 ·stack:                           <delayed till summary>



Result "org.matrix.benchmark.BenchmarkMatrix.testLoop":
  0.002 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.001, 0.002] (assumes normal distribution)

Secondary result "org.matrix.benchmark.BenchmarkMatrix.testLoop:·gc.alloc.rate":
  580.792 ±(99.9%) 81.004 MB/sec [Average]
  (min, avg, max) = (543.245, 580.792, 591.760), stdev = 21.036
  CI (99.9%): [499.788, 661.796] (assumes normal distribution)

Secondary result "org.matrix.benchmark.BenchmarkMatrix.testLoop:·gc.alloc.rate.norm":
  1016.083 ±(99.9%) 0.023 B/op [Average]
  (min, avg, max) = (1016.079, 1016.083, 1016.093), stdev = 0.006
  CI (99.9%): [1016.060, 1016.105] (assumes normal distribution)

Secondary result "org.matrix.benchmark.BenchmarkMatrix.testLoop:·gc.churn.G1_Eden_Space":
  585.377 ±(99.9%) 49.150 MB/sec [Average]
  (min, avg, max) = (562.553, 585.377, 591.703), stdev = 12.764
  CI (99.9%): [536.227, 634.526] (assumes normal distribution)

Secondary result "org.matrix.benchmark.BenchmarkMatrix.testLoop:·gc.churn.G1_Eden_Space.norm":
  1024.555 ±(99.9%) 60.148 B/op [Average]
  (min, avg, max) = (1014.639, 1024.555, 1052.193), stdev = 15.620
  CI (99.9%): [964.406, 1084.703] (assumes normal distribution)

Secondary result "org.matrix.benchmark.BenchmarkMatrix.testLoop:·gc.churn.G1_Survivor_Space":
  0.002 ±(99.9%) 0.002 MB/sec [Average]
  (min, avg, max) = (0.002, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)

Secondary result "org.matrix.benchmark.BenchmarkMatrix.testLoop:·gc.churn.G1_Survivor_Space.norm":
  0.004 ±(99.9%) 0.004 B/op [Average]
  (min, avg, max) = (0.003, 0.004, 0.005), stdev = 0.001
  CI (99.9%): [≈ 10⁻⁴, 0.008] (assumes normal distribution)

Secondary result "org.matrix.benchmark.BenchmarkMatrix.testLoop:·gc.count":
  104.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (20.000, 20.800, 21.000), stdev = 0.447
  CI (99.9%): [104.000, 104.000] (assumes normal distribution)

Secondary result "org.matrix.benchmark.BenchmarkMatrix.testLoop:·gc.time":
  108.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (17.000, 21.600, 24.000), stdev = 2.702
  CI (99.9%): [108.000, 108.000] (assumes normal distribution)

Secondary result "org.matrix.benchmark.BenchmarkMatrix.testLoop:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
 75.0%         RUNNABLE
 25.0%         TIMED_WAITING

....[Thread state: RUNNABLE]........................................................................
 25.0%  33.3% sun.nio.ch.SocketDispatcher.read0
 24.9%  33.2% <stack is empty, everything is filtered?>
 24.9%  33.1% org.matrix.LoopUnrollingMatrixMultiplication.multiply
  0.1%   0.2% org.matrix.benchmark.jmh_generated.BenchmarkMatrix_testLoop_jmhTest.testLoop_avgt_jmhStub
  0.0%   0.0% sun.management.MemoryUsageCompositeData.validateCompositeData
  0.0%   0.0% java.lang.Object.clone
  0.0%   0.0% javax.management.openmbean.TabularDataSupport.<init>
  0.0%   0.0% java.util.HashMap.tableSizeFor
  0.0%   0.0% com.sun.management.internal.GarbageCollectorExtImpl.getGcInfoBuilder
  0.0%   0.0% java.util.HashMap.hash

....[Thread state: TIMED_WAITING]...................................................................
 25.0% 100.0% jdk.internal.misc.Unsafe.park



# JMH version: 1.35
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-58
# VM invoker: C:\Program Files\Java\OpenJDK-21\bin\java.exe
# VM options: -javaagent:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\lib\idea_rt.jar=51847:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.matrix.benchmark.BenchmarkMatrix.testNaive
# Parameters: (size = 10)

# Run progress: 33.33% complete, ETA 00:03:33
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ms/op
# Warmup Iteration   2: 0.002 ms/op
# Warmup Iteration   3: 0.002 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.003 ms/op
Iteration   1: 0.003 ms/op
                 ·gc.alloc.rate:                   293.301 MB/sec
                 ·gc.alloc.rate.norm:              1016.077 B/op
                 ·gc.churn.G1_Eden_Space:          276.995 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     959.591 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         10.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 0.003 ms/op
                 ·gc.alloc.rate:                   271.447 MB/sec
                 ·gc.alloc.rate.norm:              1016.084 B/op
                 ·gc.churn.G1_Eden_Space:          278.982 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1044.291 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         10.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 0.003 ms/op
                 ·gc.alloc.rate:                   267.402 MB/sec
                 ·gc.alloc.rate.norm:              1016.084 B/op
                 ·gc.churn.G1_Eden_Space:          275.825 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1048.088 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.006 B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         8.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 0.003 ms/op
                 ·gc.alloc.rate:                   301.724 MB/sec
                 ·gc.alloc.rate.norm:              1016.082 B/op
                 ·gc.churn.G1_Eden_Space:          301.025 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1013.727 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻³ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        11.000 counts
                 ·gc.time:                         8.000 ms
                 ·stack:                           <delayed till summary>

Iteration   5: 0.009 ms/op
                 ·gc.alloc.rate:                   107.548 MB/sec
                 ·gc.alloc.rate.norm:              1016.084 B/op
                 ·gc.churn.G1_Eden_Space:          110.239 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1041.508 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        4.000 counts
                 ·gc.time:                         4.000 ms
                 ·stack:                           <delayed till summary>



Result "org.matrix.benchmark.BenchmarkMatrix.testNaive":
  0.004 ±(99.9%) 0.009 ms/op [Average]
  (min, avg, max) = (0.003, 0.004, 0.009), stdev = 0.002
  CI (99.9%): [≈ 0, 0.013] (assumes normal distribution)

Secondary result "org.matrix.benchmark.BenchmarkMatrix.testNaive:·gc.alloc.rate":
  248.284 ±(99.9%) 307.998 MB/sec [Average]
  (min, avg, max) = (107.548, 248.284, 301.724), stdev = 79.986
  CI (99.9%): [≈ 0, 556.282] (assumes normal distribution)

Secondary result "org.matrix.benchmark.BenchmarkMatrix.testNaive:·gc.alloc.rate.norm":
  1016.082 ±(99.9%) 0.012 B/op [Average]
  (min, avg, max) = (1016.077, 1016.082, 1016.084), stdev = 0.003
  CI (99.9%): [1016.071, 1016.094] (assumes normal distribution)

Secondary result "org.matrix.benchmark.BenchmarkMatrix.testNaive:·gc.churn.G1_Eden_Space":
  248.613 ±(99.9%) 300.516 MB/sec [Average]
  (min, avg, max) = (110.239, 248.613, 301.025), stdev = 78.043
  CI (99.9%): [≈ 0, 549.129] (assumes normal distribution)

Secondary result "org.matrix.benchmark.BenchmarkMatrix.testNaive:·gc.churn.G1_Eden_Space.norm":
  1021.441 ±(99.9%) 143.042 B/op [Average]
  (min, avg, max) = (959.591, 1021.441, 1048.088), stdev = 37.148
  CI (99.9%): [878.399, 1164.483] (assumes normal distribution)

Secondary result "org.matrix.benchmark.BenchmarkMatrix.testNaive:·gc.churn.G1_Survivor_Space":
  0.001 ±(99.9%) 0.002 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [≈ 0, 0.003] (assumes normal distribution)

Secondary result "org.matrix.benchmark.BenchmarkMatrix.testNaive:·gc.churn.G1_Survivor_Space.norm":
  0.003 ±(99.9%) 0.006 B/op [Average]
  (min, avg, max) = (0.001, 0.003, 0.006), stdev = 0.002
  CI (99.9%): [≈ 0, 0.009] (assumes normal distribution)

Secondary result "org.matrix.benchmark.BenchmarkMatrix.testNaive:·gc.count":
  45.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (4.000, 9.000, 11.000), stdev = 2.828
  CI (99.9%): [45.000, 45.000] (assumes normal distribution)

Secondary result "org.matrix.benchmark.BenchmarkMatrix.testNaive:·gc.time":
  40.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (4.000, 8.000, 10.000), stdev = 2.449
  CI (99.9%): [40.000, 40.000] (assumes normal distribution)

Secondary result "org.matrix.benchmark.BenchmarkMatrix.testNaive:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
 75.0%         RUNNABLE
 25.0%         TIMED_WAITING

....[Thread state: RUNNABLE]........................................................................
 25.0%  33.3% org.matrix.NaiveMatrixMultiplication.multiply
 25.0%  33.3% sun.nio.ch.SocketDispatcher.read0
 25.0%  33.3% <stack is empty, everything is filtered?>
  0.0%   0.0% java.util.TreeMap.getEntry

....[Thread state: TIMED_WAITING]...................................................................
 25.0% 100.0% jdk.internal.misc.Unsafe.park



# JMH version: 1.35
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-58
# VM invoker: C:\Program Files\Java\OpenJDK-21\bin\java.exe
# VM options: -javaagent:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\lib\idea_rt.jar=51847:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.matrix.benchmark.BenchmarkMatrix.testStrassen
# Parameters: (size = 10)

# Run progress: 66.67% complete, ETA 00:01:47
# Fork: 1 of 1
# Warmup Iteration   1: 0.262 ms/op
# Warmup Iteration   2: 0.231 ms/op
# Warmup Iteration   3: 0.232 ms/op
# Warmup Iteration   4: 0.222 ms/op
# Warmup Iteration   5: 0.223 ms/op
Iteration   1: 0.200 ms/op
                 ·gc.alloc.rate:                   496.804 MB/sec
                 ·gc.alloc.rate.norm:              109528.784 B/op
                 ·gc.churn.G1_Eden_Space:          494.851 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     109098.263 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.673 B/op
                 ·gc.count:                        18.000 counts
                 ·gc.time:                         23.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 0.255 ms/op
                 ·gc.alloc.rate:                   388.965 MB/sec
                 ·gc.alloc.rate.norm:              109528.916 B/op
                 ·gc.churn.G1_Eden_Space:          393.173 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     110713.895 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.067 B/op
                 ·gc.count:                        14.000 counts
                 ·gc.time:                         14.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 0.243 ms/op
                 ·gc.alloc.rate:                   408.381 MB/sec
                 ·gc.alloc.rate.norm:              109529.042 B/op
                 ·gc.churn.G1_Eden_Space:          418.667 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     112287.816 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.262 B/op
                 ·gc.count:                        15.000 counts
                 ·gc.time:                         14.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 0.248 ms/op
                 ·gc.alloc.rate:                   400.875 MB/sec
                 ·gc.alloc.rate.norm:              109530.296 B/op
                 ·gc.churn.G1_Eden_Space:          389.841 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     106515.478 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.429 B/op
                 ·gc.count:                        14.000 counts
                 ·gc.time:                         13.000 ms
                 ·stack:                           <delayed till summary>

Iteration   5: 0.254 ms/op
                 ·gc.alloc.rate:                   391.447 MB/sec
                 ·gc.alloc.rate.norm:              109528.525 B/op
                 ·gc.churn.G1_Eden_Space:          390.676 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     109312.947 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.274 B/op
                 ·gc.count:                        14.000 counts
                 ·gc.time:                         11.000 ms
                 ·stack:                           <delayed till summary>



Result "org.matrix.benchmark.BenchmarkMatrix.testStrassen":
  0.240 ±(99.9%) 0.088 ms/op [Average]
  (min, avg, max) = (0.200, 0.240, 0.255), stdev = 0.023
  CI (99.9%): [0.152, 0.328] (assumes normal distribution)

Secondary result "org.matrix.benchmark.BenchmarkMatrix.testStrassen:·gc.alloc.rate":
  417.294 ±(99.9%) 173.722 MB/sec [Average]
  (min, avg, max) = (388.965, 417.294, 496.804), stdev = 45.115
  CI (99.9%): [243.572, 591.017] (assumes normal distribution)

Secondary result "org.matrix.benchmark.BenchmarkMatrix.testStrassen:·gc.alloc.rate.norm":
  109529.113 ±(99.9%) 2.653 B/op [Average]
  (min, avg, max) = (109528.525, 109529.113, 109530.296), stdev = 0.689
  CI (99.9%): [109526.460, 109531.765] (assumes normal distribution)

Secondary result "org.matrix.benchmark.BenchmarkMatrix.testStrassen:·gc.churn.G1_Eden_Space":
  417.442 ±(99.9%) 172.860 MB/sec [Average]
  (min, avg, max) = (389.841, 417.442, 494.851), stdev = 44.891
  CI (99.9%): [244.582, 590.302] (assumes normal distribution)

Secondary result "org.matrix.benchmark.BenchmarkMatrix.testStrassen:·gc.churn.G1_Eden_Space.norm":
  109585.680 ±(99.9%) 8239.052 B/op [Average]
  (min, avg, max) = (106515.478, 109585.680, 112287.816), stdev = 2139.656
  CI (99.9%): [101346.628, 117824.732] (assumes normal distribution)

Secondary result "org.matrix.benchmark.BenchmarkMatrix.testStrassen:·gc.churn.G1_Survivor_Space":
  0.001 ±(99.9%) 0.004 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.001, 0.003), stdev = 0.001
  CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)

Secondary result "org.matrix.benchmark.BenchmarkMatrix.testStrassen:·gc.churn.G1_Survivor_Space.norm":
  0.341 ±(99.9%) 0.869 B/op [Average]
  (min, avg, max) = (0.067, 0.341, 0.673), stdev = 0.226
  CI (99.9%): [≈ 0, 1.210] (assumes normal distribution)

Secondary result "org.matrix.benchmark.BenchmarkMatrix.testStrassen:·gc.count":
  75.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (14.000, 15.000, 18.000), stdev = 1.732
  CI (99.9%): [75.000, 75.000] (assumes normal distribution)

Secondary result "org.matrix.benchmark.BenchmarkMatrix.testStrassen:·gc.time":
  75.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (11.000, 15.000, 23.000), stdev = 4.637
  CI (99.9%): [75.000, 75.000] (assumes normal distribution)

Secondary result "org.matrix.benchmark.BenchmarkMatrix.testStrassen:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
 75.0%         RUNNABLE
 25.0%         TIMED_WAITING

....[Thread state: RUNNABLE]........................................................................
 25.0%  33.3% sun.nio.ch.SocketDispatcher.read0
 25.0%  33.3% <stack is empty, everything is filtered?>
 10.8%  14.4% org.matrix.StrassenMatrixMultiplication.multiply
  8.0%  10.7% org.matrix.StrassenMatrixMultiplication.addMatrix
  5.3%   7.1% org.matrix.StrassenMatrixMultiplication.subtractMatrix
  0.6%   0.7% org.matrix.StrassenMatrixMultiplication.splitMatrix
  0.3%   0.4% org.matrix.StrassenMatrixMultiplication.mergeMatrix
  0.0%   0.0% java.lang.reflect.AccessibleObject.checkCanSetAccessible

....[Thread state: TIMED_WAITING]...................................................................
 25.0% 100.0% jdk.internal.misc.Unsafe.park



# Run complete. Total time: 00:05:23

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                      (size)  Mode  Cnt       Score      Error   Units
BenchmarkMatrix.testLoop                                           10  avgt    5       0.002 ±    0.001   ms/op
BenchmarkMatrix.testLoop:·gc.alloc.rate                            10  avgt    5     580.792 ±   81.004  MB/sec
BenchmarkMatrix.testLoop:·gc.alloc.rate.norm                       10  avgt    5    1016.083 ±    0.023    B/op
BenchmarkMatrix.testLoop:·gc.churn.G1_Eden_Space                   10  avgt    5     585.377 ±   49.150  MB/sec
BenchmarkMatrix.testLoop:·gc.churn.G1_Eden_Space.norm              10  avgt    5    1024.555 ±   60.148    B/op
BenchmarkMatrix.testLoop:·gc.churn.G1_Survivor_Space               10  avgt    5       0.002 ±    0.002  MB/sec
BenchmarkMatrix.testLoop:·gc.churn.G1_Survivor_Space.norm          10  avgt    5       0.004 ±    0.004    B/op
BenchmarkMatrix.testLoop:·gc.count                                 10  avgt    5     104.000             counts
BenchmarkMatrix.testLoop:·gc.time                                  10  avgt    5     108.000                 ms
BenchmarkMatrix.testLoop:·stack                                    10  avgt              NaN                ---
BenchmarkMatrix.testNaive                                          10  avgt    5       0.004 ±    0.009   ms/op
BenchmarkMatrix.testNaive:·gc.alloc.rate                           10  avgt    5     248.284 ±  307.998  MB/sec
BenchmarkMatrix.testNaive:·gc.alloc.rate.norm                      10  avgt    5    1016.082 ±    0.012    B/op
BenchmarkMatrix.testNaive:·gc.churn.G1_Eden_Space                  10  avgt    5     248.613 ±  300.516  MB/sec
BenchmarkMatrix.testNaive:·gc.churn.G1_Eden_Space.norm             10  avgt    5    1021.441 ±  143.042    B/op
BenchmarkMatrix.testNaive:·gc.churn.G1_Survivor_Space              10  avgt    5       0.001 ±    0.002  MB/sec
BenchmarkMatrix.testNaive:·gc.churn.G1_Survivor_Space.norm         10  avgt    5       0.003 ±    0.006    B/op
BenchmarkMatrix.testNaive:·gc.count                                10  avgt    5      45.000             counts
BenchmarkMatrix.testNaive:·gc.time                                 10  avgt    5      40.000                 ms
BenchmarkMatrix.testNaive:·stack                                   10  avgt              NaN                ---
BenchmarkMatrix.testStrassen                                       10  avgt    5       0.240 ±    0.088   ms/op
BenchmarkMatrix.testStrassen:·gc.alloc.rate                        10  avgt    5     417.294 ±  173.722  MB/sec
BenchmarkMatrix.testStrassen:·gc.alloc.rate.norm                   10  avgt    5  109529.113 ±    2.653    B/op
BenchmarkMatrix.testStrassen:·gc.churn.G1_Eden_Space               10  avgt    5     417.442 ±  172.860  MB/sec
BenchmarkMatrix.testStrassen:·gc.churn.G1_Eden_Space.norm          10  avgt    5  109585.680 ± 8239.052    B/op
BenchmarkMatrix.testStrassen:·gc.churn.G1_Survivor_Space           10  avgt    5       0.001 ±    0.004  MB/sec
BenchmarkMatrix.testStrassen:·gc.churn.G1_Survivor_Space.norm      10  avgt    5       0.341 ±    0.869    B/op
BenchmarkMatrix.testStrassen:·gc.count                             10  avgt    5      75.000             counts
BenchmarkMatrix.testStrassen:·gc.time                              10  avgt    5      75.000                 ms
BenchmarkMatrix.testStrassen:·stack                                10  avgt              NaN                ---
