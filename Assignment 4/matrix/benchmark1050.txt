# JMH version: 1.35
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-58
# VM invoker: C:\Program Files\Java\OpenJDK-21\bin\java.exe
# VM options: -javaagent:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\lib\idea_rt.jar=61139:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ulpgc.DistributedMatrixMultiplication.testDistributedMatrixMultiplication
# Parameters: (size = 10)

# Run progress: 0.00% complete, ETA 00:08:20
# Fork: 1 of 1
# Warmup Iteration   1: 0.917 ms/op
# Warmup Iteration   2: 0.692 ms/op
# Warmup Iteration   3: 0.579 ms/op
# Warmup Iteration   4: 0.572 ms/op
# Warmup Iteration   5: 0.579 ms/op
Iteration   1: 0.579 ms/op
Iteration   2: 0.575 ms/op
Iteration   3: 0.543 ms/op
Iteration   4: 0.567 ms/op
Iteration   5: 0.580 ms/op


Result "org.ulpgc.DistributedMatrixMultiplication.testDistributedMatrixMultiplication":
  0.569 ±(99.9%) 0.059 ms/op [Average]
  (min, avg, max) = (0.543, 0.569, 0.580), stdev = 0.015
  CI (99.9%): [0.510, 0.628] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-58
# VM invoker: C:\Program Files\Java\OpenJDK-21\bin\java.exe
# VM options: -javaagent:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\lib\idea_rt.jar=61139:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ulpgc.DistributedMatrixMultiplication.testDistributedMatrixMultiplication
# Parameters: (size = 20)

# Run progress: 20.00% complete, ETA 00:08:24
# Fork: 1 of 1
# Warmup Iteration   1: 2.106 ms/op
# Warmup Iteration   2: 1.364 ms/op
# Warmup Iteration   3: 1.238 ms/op
# Warmup Iteration   4: 1.221 ms/op
# Warmup Iteration   5: 1.247 ms/op
Iteration   1: 1.213 ms/op
Iteration   2: 1.267 ms/op
Iteration   3: 1.245 ms/op
Iteration   4: 1.389 ms/op
Iteration   5: 1.318 ms/op


Result "org.ulpgc.DistributedMatrixMultiplication.testDistributedMatrixMultiplication":
  1.286 ±(99.9%) 0.265 ms/op [Average]
  (min, avg, max) = (1.213, 1.286, 1.389), stdev = 0.069
  CI (99.9%): [1.021, 1.551] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-58
# VM invoker: C:\Program Files\Java\OpenJDK-21\bin\java.exe
# VM options: -javaagent:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\lib\idea_rt.jar=61139:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ulpgc.DistributedMatrixMultiplication.testDistributedMatrixMultiplication
# Parameters: (size = 30)

# Run progress: 40.00% complete, ETA 00:06:17
# Fork: 1 of 1
# Warmup Iteration   1: 2.894 ms/op
# Warmup Iteration   2: 2.198 ms/op
# Warmup Iteration   3: 2.122 ms/op
# Warmup Iteration   4: 1.944 ms/op
# Warmup Iteration   5: 2.157 ms/op
Iteration   1: 2.051 ms/op
Iteration   2: 2.008 ms/op
Iteration   3: 2.019 ms/op
Iteration   4: 1.977 ms/op
Iteration   5: 1.980 ms/op


Result "org.ulpgc.DistributedMatrixMultiplication.testDistributedMatrixMultiplication":
  2.007 ±(99.9%) 0.117 ms/op [Average]
  (min, avg, max) = (1.977, 2.007, 2.051), stdev = 0.030
  CI (99.9%): [1.890, 2.123] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-58
# VM invoker: C:\Program Files\Java\OpenJDK-21\bin\java.exe
# VM options: -javaagent:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\lib\idea_rt.jar=61139:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ulpgc.DistributedMatrixMultiplication.testDistributedMatrixMultiplication
# Parameters: (size = 40)

# Run progress: 60.00% complete, ETA 00:04:10
# Fork: 1 of 1
# Warmup Iteration   1: 4.477 ms/op
# Warmup Iteration   2: 3.196 ms/op
# Warmup Iteration   3: 3.157 ms/op
# Warmup Iteration   4: 3.079 ms/op
# Warmup Iteration   5: 2.913 ms/op
Iteration   1: 3.107 ms/op
Iteration   2: 2.956 ms/op
Iteration   3: 2.990 ms/op
Iteration   4: 3.014 ms/op
Iteration   5: 3.396 ms/op


Result "org.ulpgc.DistributedMatrixMultiplication.testDistributedMatrixMultiplication":
  3.093 ±(99.9%) 0.688 ms/op [Average]
  (min, avg, max) = (2.956, 3.093, 3.396), stdev = 0.179
  CI (99.9%): [2.405, 3.780] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-58
# VM invoker: C:\Program Files\Java\OpenJDK-21\bin\java.exe
# VM options: -javaagent:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\lib\idea_rt.jar=61139:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ulpgc.DistributedMatrixMultiplication.testDistributedMatrixMultiplication
# Parameters: (size = 50)

# Run progress: 80.00% complete, ETA 00:02:05
# Fork: 1 of 1
# Warmup Iteration   1: 6.659 ms/op
# Warmup Iteration   2: 4.397 ms/op
# Warmup Iteration   3: 4.496 ms/op
# Warmup Iteration   4: 3.904 ms/op
# Warmup Iteration   5: 3.968 ms/op
Iteration   1: 4.063 ms/op
Iteration   2: 4.160 ms/op
Iteration   3: 4.401 ms/op
Iteration   4: 4.086 ms/op
Iteration   5: 3.849 ms/op


Result "org.ulpgc.DistributedMatrixMultiplication.testDistributedMatrixMultiplication":
  4.112 ±(99.9%) 0.766 ms/op [Average]
  (min, avg, max) = (3.849, 4.112, 4.401), stdev = 0.199
  CI (99.9%): [3.346, 4.877] (assumes normal distribution)


# Run complete. Total time: 00:10:26

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                            (size)  Mode  Cnt  Score   Error  Units
DistributedMatrixMultiplication.testDistributedMatrixMultiplication      10  avgt    5  0.569 ± 0.059  ms/op
DistributedMatrixMultiplication.testDistributedMatrixMultiplication      20  avgt    5  1.286 ± 0.265  ms/op
DistributedMatrixMultiplication.testDistributedMatrixMultiplication      30  avgt    5  2.007 ± 0.117  ms/op
DistributedMatrixMultiplication.testDistributedMatrixMultiplication      40  avgt    5  3.093 ± 0.688  ms/op
DistributedMatrixMultiplication.testDistributedMatrixMultiplication      50  avgt    5  4.112 ± 0.766  ms/op
