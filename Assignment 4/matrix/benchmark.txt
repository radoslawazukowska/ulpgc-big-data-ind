# JMH version: 1.35
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-58
# VM invoker: C:\Program Files\Java\OpenJDK-21\bin\java.exe
# VM options: -javaagent:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\lib\idea_rt.jar=61255:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ulpgc.DistributedMatrixMultiplication.testDistributedMatrixMultiplication
# Parameters: (size = 100)

# Run progress: 0.00% complete, ETA 00:08:20
# Fork: 1 of 1
# Warmup Iteration   1: 26.602 ms/op
# Warmup Iteration   2: 24.525 ms/op
# Warmup Iteration   3: 16.327 ms/op
# Warmup Iteration   4: 15.401 ms/op
# Warmup Iteration   5: 15.051 ms/op
Iteration   1: 15.365 ms/op
Iteration   2: 15.905 ms/op
Iteration   3: 15.017 ms/op
Iteration   4: 15.041 ms/op
Iteration   5: 19.602 ms/op


Result "org.ulpgc.DistributedMatrixMultiplication.testDistributedMatrixMultiplication":
  16.186 ±(99.9%) 7.481 ms/op [Average]
  (min, avg, max) = (15.017, 16.186, 19.602), stdev = 1.943
  CI (99.9%): [8.705, 23.667] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-58
# VM invoker: C:\Program Files\Java\OpenJDK-21\bin\java.exe
# VM options: -javaagent:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\lib\idea_rt.jar=61255:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ulpgc.DistributedMatrixMultiplication.testDistributedMatrixMultiplication
# Parameters: (size = 200)

# Run progress: 20.00% complete, ETA 00:08:28
# Fork: 1 of 1
# Warmup Iteration   1: 316.364 ms/op
# Warmup Iteration   2: 124.411 ms/op
# Warmup Iteration   3: 84.265 ms/op
# Warmup Iteration   4: 87.523 ms/op
# Warmup Iteration   5: 99.425 ms/op
Iteration   1: 83.936 ms/op
Iteration   2: 79.961 ms/op
Iteration   3: 75.685 ms/op
Iteration   4: 77.611 ms/op
Iteration   5: 73.802 ms/op


Result "org.ulpgc.DistributedMatrixMultiplication.testDistributedMatrixMultiplication":
  78.199 ±(99.9%) 15.162 ms/op [Average]
  (min, avg, max) = (73.802, 78.199, 83.936), stdev = 3.938
  CI (99.9%): [63.037, 93.361] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-58
# VM invoker: C:\Program Files\Java\OpenJDK-21\bin\java.exe
# VM options: -javaagent:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\lib\idea_rt.jar=61255:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ulpgc.DistributedMatrixMultiplication.testDistributedMatrixMultiplication
# Parameters: (size = 300)

# Run progress: 40.00% complete, ETA 00:06:22
# Fork: 1 of 1
# Warmup Iteration   1: 1082.129 ms/op
# Warmup Iteration   2: 421.755 ms/op
# Warmup Iteration   3: 222.594 ms/op
# Warmup Iteration   4: 313.696 ms/op
# Warmup Iteration   5: 315.214 ms/op
Iteration   1: 250.191 ms/op
Iteration   2: 239.180 ms/op
Iteration   3: 247.767 ms/op
Iteration   4: 248.525 ms/op
Iteration   5: 289.464 ms/op


Result "org.ulpgc.DistributedMatrixMultiplication.testDistributedMatrixMultiplication":
  255.026 ±(99.9%) 75.932 ms/op [Average]
  (min, avg, max) = (239.180, 255.026, 289.464), stdev = 19.719
  CI (99.9%): [179.093, 330.958] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-58
# VM invoker: C:\Program Files\Java\OpenJDK-21\bin\java.exe
# VM options: -javaagent:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\lib\idea_rt.jar=61255:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ulpgc.DistributedMatrixMultiplication.testDistributedMatrixMultiplication
# Parameters: (size = 400)

# Run progress: 60.00% complete, ETA 00:04:15
# Fork: 1 of 1
# Warmup Iteration   1: 1709.697 ms/op
# Warmup Iteration   2: 1760.677 ms/op
# Warmup Iteration   3: 633.383 ms/op
# Warmup Iteration   4: 671.571 ms/op
# Warmup Iteration   5: 1015.772 ms/op
Iteration   1: 931.901 ms/op
Iteration   2: 803.935 ms/op
Iteration   3: 1002.457 ms/op
Iteration   4: 916.411 ms/op
Iteration   5: 767.125 ms/op


Result "org.ulpgc.DistributedMatrixMultiplication.testDistributedMatrixMultiplication":
  884.366 ±(99.9%) 372.572 ms/op [Average]
  (min, avg, max) = (767.125, 884.366, 1002.457), stdev = 96.756
  CI (99.9%): [511.794, 1256.938] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-58
# VM invoker: C:\Program Files\Java\OpenJDK-21\bin\java.exe
# VM options: -javaagent:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\lib\idea_rt.jar=61255:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ulpgc.DistributedMatrixMultiplication.testDistributedMatrixMultiplication
# Parameters: (size = 500)

# Run progress: 80.00% complete, ETA 00:02:08
# Fork: 1 of 1
# Warmup Iteration   1: 4381.534 ms/op
# Warmup Iteration   2: 3390.064 ms/op
# Warmup Iteration   3: 1205.893 ms/op
# Warmup Iteration   4: 1094.256 ms/op
# Warmup Iteration   5: 1155.717 ms/op
Iteration   1: 1203.105 ms/op
Iteration   2: 1241.713 ms/op
Iteration   3: 1221.419 ms/op
Iteration   4: 1203.648 ms/op
Iteration   5: 1198.521 ms/op


Result "org.ulpgc.DistributedMatrixMultiplication.testDistributedMatrixMultiplication":
  1213.681 ±(99.9%) 69.098 ms/op [Average]
  (min, avg, max) = (1198.521, 1213.681, 1241.713), stdev = 17.945
  CI (99.9%): [1144.583, 1282.779] (assumes normal distribution)


# Run complete. Total time: 00:10:49

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                            (size)  Mode  Cnt     Score     Error  Units
DistributedMatrixMultiplication.testDistributedMatrixMultiplication     100  avgt    5    16.186 ±   7.481  ms/op
DistributedMatrixMultiplication.testDistributedMatrixMultiplication     200  avgt    5    78.199 ±  15.162  ms/op
DistributedMatrixMultiplication.testDistributedMatrixMultiplication     300  avgt    5   255.026 ±  75.932  ms/op
DistributedMatrixMultiplication.testDistributedMatrixMultiplication     400  avgt    5   884.366 ± 372.572  ms/op
DistributedMatrixMultiplication.testDistributedMatrixMultiplication     500  avgt    5  1213.681 ±  69.098  ms/op
